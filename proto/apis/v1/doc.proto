syntax = "proto3";

package apis.v1;

import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/emrgen/document/proto/v1";

message Link {
  string source_id = 1 [(validate.rules).string.uuid = true];
  string source_version = 2;
  string target_id = 3 [(validate.rules).string.uuid = true];
  string target_version = 4;
}

enum DocumentKind {
  DOC_TEXT = 0;
  DOC_JSON = 1;
}

// Document
message Document {
  string id = 1 [(validate.rules).string.uuid = true];
  int64 version = 2;
  string meta = 3;
  string content = 4;
  map<string, string> links = 5;
  repeated string children = 6;
  DocumentKind kind = 7; // default: treated as text
  google.protobuf.Timestamp created_at = 20;
  google.protobuf.Timestamp updated_at = 21;
  string project_id = 22 [(validate.rules).string.uuid = true];
}

extend google.protobuf.MessageOptions {
  optional bool authenticate = 51000;
}

message CreateDocumentRequest {
  string project_id = 1 [(validate.rules).string.uuid = true];
  optional string document_id = 2 [(validate.rules).string.uuid = true];
  string meta = 3;
  string content = 4;
  map<string, string> links = 5;
  repeated string children = 6;
}

message CreateDocumentResponse {
  Document document = 1;
}

message GetDocumentRequest {
  string document_id = 2 [(validate.rules).string.uuid = true];
}

message GetDocumentResponse {
  Document document = 1;
}

message ListDocumentsRequest {
  string project_id = 1 [(validate.rules).string.uuid = true];
  int32 page = 5;
  int32 per_page = 6;
  repeated string document_ids = 7;
}

message ListDocumentsResponse {
  repeated Document documents = 1;
  int32 total = 2;
}

message ListDocumentVersionsRequest {
  string document_id = 1 [(validate.rules).string.uuid = true];
}

message DocumentVersion {
  int64 version = 1;
  google.protobuf.Timestamp created_at = 2;
}

message ListDocumentVersionsResponse {
  repeated DocumentVersion versions = 1;
  google.protobuf.Timestamp created_at = 2;
  int64 latest_version = 3;
}

enum UpdateKind {
  TEXT = 0;
  JSON = 1;
  JSONPATCH = 2;
}

message UpdateDocumentRequest {
  string document_id = 1 [(validate.rules).string.uuid = true];
  optional string meta = 2;
  optional string content = 3;
  map<string, string> links = 4;
  repeated string children = 5;
  int64 version = 10;
  UpdateKind kind = 11;
  google.protobuf.Timestamp updated_at = 21;
}

// UpdateDocumentResponse is the response for updating a document
message UpdateDocumentResponse {
  string id = 1 [(validate.rules).string.uuid = true];
  uint32 version = 3;
}

message DeleteDocumentRequest {
  string id = 1 [(validate.rules).string.uuid = true];
}

message DeleteDocumentResponse {
  Document document = 1;
}

message EraseDocumentRequest {
  string id = 1 [(validate.rules).string.uuid = true];
}

message EraseDocumentResponse {
  Document document = 1;
}

message PublishDocumentsRequest {
  repeated string document_ids = 1;
  optional string version = 2; // semver
  bool force = 3;
}

message PublishDocumentsResponse {
  repeated PublishedDocument documents = 1;
}

message ListBacklinksRequest {
  string document_id = 2 [(validate.rules).string.uuid = true];
  int32 page = 5;
  int32 per_page = 6;
}

message ListBacklinksResponse {
  repeated Link links = 1;
  int32 total = 2;
}

service DocumentService {
  rpc CreateDocument(CreateDocumentRequest) returns (CreateDocumentResponse) {
    option (google.api.http) = {
      post: "/v1/documents"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create a document"
      description: "Create a document"
      operation_id: "CreateDocument"
    };
  }

  rpc GetDocument(GetDocumentRequest) returns (GetDocumentResponse) {
    option (google.api.http) = {get: "/v1/documents/{document_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a document"
      description: "Get a document"
      operation_id: "GetDocument"
    };
  }

  rpc ListDocuments(ListDocumentsRequest) returns (ListDocumentsResponse) {
    option (google.api.http) = {get: "/v1/documents"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List documents"
      description: "List documents"
      operation_id: "ListDocuments"
    };
  }

  rpc ListDocumentVersions(ListDocumentVersionsRequest) returns (ListDocumentVersionsResponse) {
    option (google.api.http) = {get: "/v1/documents/{document_id}/versions"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List document versions"
      description: "List document versions"
      operation_id: "ListDocumentVersions"
    };
  }

  rpc UpdateDocument(UpdateDocumentRequest) returns (UpdateDocumentResponse) {
    option (google.api.http) = {
      put: "/v1/documents/{document_id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update a document"
      description: "Update a document"
      operation_id: "UpdateDocument"
    };
  }

  rpc DeleteDocument(DeleteDocumentRequest) returns (DeleteDocumentResponse) {
    option (google.api.http) = {delete: "/v1/documents/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete a document"
      description: "Delete a document"
      operation_id: "DeleteDocument"
    };
  }

  rpc EraseDocument(EraseDocumentRequest) returns (EraseDocumentResponse) {
    option (google.api.http) = {delete: "/v1/documents/{id}/erase"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Erase a document"
      description: "Erase a document"
      operation_id: "EraseDocument"
    };
  }

  rpc PublishDocuments(PublishDocumentsRequest) returns (PublishDocumentsResponse) {
    option (google.api.http) = {
      post: "/v1/documents/-/publish"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Publish a document"
      description: "Publish a document"
      operation_id: "PublishDocument"
    };
  }

  rpc ListBacklinks(ListBacklinksRequest) returns (ListBacklinksResponse) {
    option (google.api.http) = {get: "/v1/documents/{document_id}/backlinks"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List backlinks"
      description: "List backlinks"
      operation_id: "ListBacklinks"
    };
  }
}

message PublishedDocument {
  string id = 1 [(validate.rules).string.uuid = true];
  string version = 2; // semver
  string meta = 3;
  string content = 4;
  map<string, string> links = 5;
  repeated string children = 6;
  PublishedDocumentVersion latest_version = 7;
  string project_id = 22 [(validate.rules).string.uuid = true];
}

message GetPublishedDocumentRequest {
  string id = 1 [(validate.rules).string.uuid = true];
  string version = 2; // semver
}

message GetPublishedDocumentResponse {
  PublishedDocument document = 1;
}

message GetPublishedDocumentMetaRequest {
  string document_id = 1 [(validate.rules).string.uuid = true];
  string version = 2; // semver
}

message GetPublishedDocumentMetaResponse {
  PublishedDocument document = 1;
}

message ListPublishedDocumentsRequest {
  string project_id = 1 [(validate.rules).string.uuid = true];
  int32 page = 5;
  int32 per_page = 6;
}

message ListPublishedDocumentsResponse {
  repeated PublishedDocument documents = 1;
  int32 total = 2;
}

message ListPublishedDocumentVersionsRequest {
  string id = 1 [(validate.rules).string.uuid = true];
}

message PublishedDocumentVersion {
  string version = 1;
  google.protobuf.Timestamp created_at = 2;
}

message ListPublishedDocumentVersionsResponse {
  string id = 1 [(validate.rules).string.uuid = true];
  repeated PublishedDocumentVersion versions = 2;
  string latest_version = 3;
}

message ListPublishedBacklinksRequest {
  string document_id = 2 [(validate.rules).string.uuid = true];
  string version = 3;
  int32 page = 5;
  int32 per_page = 6;
}

message ListPublishedBacklinksResponse {
  repeated Link links = 1;
  int32 total = 2;
}

service PublishedDocumentService {
  rpc GetPublishedDocument(GetPublishedDocumentRequest) returns (GetPublishedDocumentResponse) {
    option (google.api.http) = {get: "/v1/published/{id}/version/{version}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a published document"
      description: "Get a published document"
      operation_id: "GetPublishedDocument"
    };
  }

  rpc GetPublishedDocumentMeta(GetPublishedDocumentMetaRequest) returns (GetPublishedDocumentMetaResponse) {
    option (google.api.http) = {get: "/v1/published/{document_id}/version/{version}/meta"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a published document meta"
      description: "Get a published document meta"
      operation_id: "GetPublishedDocumentMeta"
    };
  }

  rpc ListPublishedDocuments(ListPublishedDocumentsRequest) returns (ListPublishedDocumentsResponse) {
    option (google.api.http) = {get: "/v1/published"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List published documents"
      description: "List published documents"
      operation_id: "ListPublishedDocuments"
    };
  }

  rpc ListPublishedDocumentVersions(ListPublishedDocumentVersionsRequest) returns (ListPublishedDocumentVersionsResponse) {
    option (google.api.http) = {get: "/v1/published/{id}/versions"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List published document versions"
      description: "List published document versions"
      operation_id: "ListPublishedDocumentVersions"
    };
  }

  rpc ListPublishedBacklinks(ListPublishedBacklinksRequest) returns (ListPublishedBacklinksResponse) {
    option (google.api.http) = {get: "/v1/published/{document_id}/backlinks"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List published backlinks"
      description: "List published backlinks"
      operation_id: "ListPublishedBacklinks"
    };
  }
}

message DocumentBackup {
  Document document = 2;
}

message ListDocumentBackupsRequest {
  string project_id = 1 [(validate.rules).string.uuid = true];
  string document_id = 2 [(validate.rules).string.uuid = true];
  int32 page = 5;
  int32 per_page = 6;
}

message ListDocumentBackupsResponse {
  repeated DocumentBackup backups = 1;
  int32 total = 2;
}

message CreateDocumentBackupRequest {
  string project_id = 1 [(validate.rules).string.uuid = true];
  string document_id = 2 [(validate.rules).string.uuid = true];
}

message CreateDocumentBackupResponse {
  Document document = 1;
}

message GetDocumentBackupRequest {
  string document_id = 1 [(validate.rules).string.uuid = true];
  int64 version = 2;
}

message GetDocumentBackupResponse {
  Document document = 1;
}

message DeleteDocumentBackupRequest {
  string project_id = 1 [(validate.rules).string.uuid = true];
  string document_id = 2 [(validate.rules).string.uuid = true];
  string id = 3 [(validate.rules).string.uuid = true];
}

message DeleteDocumentBackupResponse {
  Document document = 1;
}

message RestoreDocumentBackupRequest {
  string project_id = 1 [(validate.rules).string.uuid = true];
  string document_id = 2 [(validate.rules).string.uuid = true];
  string id = 3 [(validate.rules).string.uuid = true];
}

message RestoreDocumentBackupResponse {
  Document document = 1;
}

service DocumentBackupService {
  rpc ListDocumentBackups(ListDocumentBackupsRequest) returns (ListDocumentBackupsResponse) {
    option (google.api.http) = {get: "/v1/documents/{document_id}/versions"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List document backups"
      description: "List document backups"
      operation_id: "ListDocumentBackups"
    };
  }

  rpc CreateDocumentBackup(CreateDocumentBackupRequest) returns (CreateDocumentBackupResponse) {
    option (google.api.http) = {
      post: "/v1/documents/{document_id}/versions"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create a document backup"
      description: "Create a document backup"
      operation_id: "CreateDocumentBackup"
    };
  }

  rpc GetDocumentBackup(GetDocumentBackupRequest) returns (GetDocumentBackupResponse) {
    option (google.api.http) = {get: "/v1/documents/{document_id}/versions/{version}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a document backup"
      description: "Get a document backup"
      operation_id: "GetDocumentBackup"
    };
  }

  rpc DeleteDocumentBackup(DeleteDocumentBackupRequest) returns (DeleteDocumentBackupResponse) {
    option (google.api.http) = {delete: "/v1/documents/{document_id}/backups/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete a document backup"
      description: "Delete a document backup"
      operation_id: "DeleteDocumentBackup"
    };
  }

  rpc RestoreDocumentBackup(RestoreDocumentBackupRequest) returns (RestoreDocumentBackupResponse) {
    option (google.api.http) = {
      post: "/v1/documents/{document_id}/backups/{id}/restore"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Restore a document backup"
      description: "Restore a document backup"
      operation_id: "RestoreDocumentBackup"
    };
  }
}
